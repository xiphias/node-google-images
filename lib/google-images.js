var fs, generateInfo, request;

request = require('request');

fs = require('fs');

generateInfo = function(item) {
  var info;
  info = {
    width: item.width,
    height: item.height,
    unescapedUrl: item.unescapedUrl,
    url: item.url,
    writeTo: function(path, callback) {
      var stream;
      stream = fs.createWriteStream(path);
      stream.on('close', function() {
        return typeof callback === "function" ? callback() : void 0;
      });
      return request(item.url).pipe(stream);
    }
  };
  return info;
};

exports.search = function(query, options) {
  var callback;
  if (typeof query === 'object') {
    options = query;
    query = options["for"];
    if (options.callback != null) {
      callback = options.callback;
    }
  }
  if (typeof query === 'string' && typeof options === 'function') {
    callback = options;
    options = {};
  }
  if (typeof query === 'string' && typeof options === 'object') {
    if (options.callback != null) {
      callback = options.callback;
    }
  }
  if (options.page == null) {
    options.page = 0;
  }
  if (options.hl == null) {
    options.hl = 'en';
  }
  return request("http://ajax.googleapis.com/ajax/services/search/images?v=1.0&hl=" + options.hl + "&q=" + (query.replace(/\s/g, '+')) + "&start=" + options.page, function(err, res, body) {
    var i, images, item, items, len;
    items = JSON.parse(body).responseData.results;
    images = [];
    for (i = 0, len = items.length; i < len; i++) {
      item = items[i];
      images.push(generateInfo(item));
    }
    if (callback) {
      return callback(false, images);
    }
  });
};

// ---
// generated by coffee-script 1.9.2
